Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

CODE: SELECT *
      FROM table 
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table =  10000
iv. Checkin table = 10000
v. elite_years table = 10000 
vi. friend table = 10000 
vii. hours table = 10000 
viii. photo table = 10000 
ix. review table = 10000 
x. tip table = 10000 
xi. user table = 10000 
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

CODE: SELECT DISTINCT (column)
      FROM table

i. Business = 10000 [primary key: id]
ii. Hours = 1562 [foreign key: business_id]
iii. Category = 2643 [foreign key: business_id]
iv. Attribute = 1115 [foreign key: business_id]
v. Review = 8090 [foreign key: business_id]
vi. Checkin = 493 [foreign key: business_id]
vii. Photo = 6493 [foreign key: business_id]
viii. Tip =  3979 [foreign key: business_id]
ix. User = 10000 [primary key: id]
x. Friend = 11 [foreign key:user_id]
xi. Elite_years =  2780 [foreign key:user_id]

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No.
	
	
	SQL code used to arrive at answer: SELECT *
					   FROM User
					   WHERE id IS NULL OR name IS NULL OR review_count IS NULL OR yelping_since IS NULL
        				         OR useful IS NULL OR funny IS NULL OR cool IS NULL OR fans IS NULL 
        				         OR average_stars IS NULL OR compliment_hot IS NULL 
        				         OR compliment_more IS NULL OR compliment_profile IS NULL 
        				         OR compliment_cute IS NULL OR compliment_list IS NULL 
        				         OR compliment_note IS NULL OR compliment_plain IS NULL 
        				         OR compliment_cool IS NULL OR compliment_funny IS NULL 
        				         OR compliment_writer IS NULL OR compliment_photos IS NULL 
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2 		avg: 0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max:53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max:2000        avg: 24.2995 

Code: SELECT 
    	 AVG(column) AS Average_column
    	,MAX(column) AS Max_column
    	,MIN(column) AS Min_column
      FROM User
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: SELECT 
    					       City
                                               ,SUM(Review_count) AS Reviews_per_City
                                           FROM Business
                                           GROUP BY City
                                           ORDER BY Reviews_per_City DESC

	
	
	Copy and Paste the Result Below:

	        +-----------------+-------------------+
		| city            | sum(review_count) |
		+-----------------+-------------------+
		| Las Vegas       |             82854 |
		| Phoenix         |             34503 |
		| Toronto         |             24113 |
		| Scottsdale      |             20614 |
		| Charlotte       |             12523 |
		| Henderson       |             10871 |
		| Tempe           |             10504 |
		| Pittsburgh      |              9798 |
		| MontrÃ©al       |              9448 |
		| Chandler        |              8112 |
		| Mesa            |              6875 |
		| Gilbert         |              6380 |
		| Cleveland       |              5593 |
		| Madison         |              5265 |
		| Glendale        |              4406 |
		| Mississauga     |              3814 |
		| Edinburgh       |              2792 |
		| Peoria          |              2624 |
		| North Las Vegas |              2438 |
		| Markham         |              2352 |
		| Champaign       |              2029 |
		| Stuttgart       |              1849 |
		| Surprise        |              1520 |
		| Lakewood        |              1465 |
		| Goodyear        |              1155 |
		+-----------------+-------------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon
	
		SQL code used to arrive at answer:
			select stars as [Star Rating], count(stars) as [Count]
			from business b
			where city = 'Avon'
			group by stars
		
		Copy and Paste the Resulting Table Below (2 columns - star rating and count):
			+-------------+-------+
			| Star Rating | Count |
			+-------------+-------+
			|         1.5 |     1 |
			|         2.5 |     2 |
			|         3.5 |     3 |
			|         4.0 |     2 |
			|         4.5 |     1 |
			|         5.0 |     1 |
			+-------------+-------+
	
	
ii. Beachwood

		SQL code used to arrive at answer:
			select stars as [Star Rating], count(stars) as [Count]
			from business b
			where city = 'Beachwood'
			group by stars
		
		Copy and Paste the Resulting Table Below (2 columns - star rating and count):
			+-------------+-------+
			| Star Rating | Count |
			+-------------+-------+
			|         2.0 |     1 |
			|         2.5 |     1 |
			|         3.0 |     2 |
			|         3.5 |     2 |
			|         4.0 |     1 |
			|         4.5 |     2 |
			|         5.0 |     5 |
			+-------------+-------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT 
    id
    ,name
    ,SUM(review_count) AS reviews_count
FROM User
GROUP BY id
ORDER BY reviews_count DESC
LIMIT 3
	
		
	Copy and Paste the Result Below:

+------------------------+--------+---------------+
| id                     | name   | reviews_count |
+------------------------+--------+---------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |          2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |          1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |          1339 |
+------------------------+--------+---------------+

		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results: 

In visualizing the output we can check that the number of reviews does not imply more fans. 
For example, we can see Sara and Yuri, the second and third users in the number of reviews, 
with only 50 and 76 fans, respectively. Nonetheless, it's important to highlight that only a correlation coefficient 
could show the association between the reviews and fans columns, or even a linear regression to define 
a causality relationship between these two variables.


Code:

SELECT 
    id
    ,name
    ,SUM(review_count) AS reviews_count
    ,SUM(fans) AS sum_fans
FROM user
GROUP BY id
ORDER BY reviews_count DESC

Output:

+------------------------+-----------+---------------+----------+
| id                     | name      | reviews_count | sum_fans |
+------------------------+-----------+---------------+----------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |          2000 |      253 |
| -3s52C4zL_DHRK0ULG6qtg | Sara      |          1629 |       50 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |          1339 |       76 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |          1246 |      101 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |          1215 |      126 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |          1153 |      311 |
| -gokwePdbXjfS0iF7NsUGA | eric      |          1116 |       16 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |          1039 |      104 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |           968 |      497 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |           930 |      173 |
| -fUARDNuXAfrOn4WLSZLgA | Ed        |           904 |       38 |
| -hKniZN2OdshWLHYuj21jQ | Nicole    |           864 |       43 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |           862 |      124 |
| -B-QEUESGWHPE_889WJaeg | Mark      |           861 |      115 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |           842 |       85 |
| -kO6984fXByyZm3_6z2JYg | Dominic   |           836 |       37 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |           834 |      120 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |           813 |      159 |
| -l9giG8TSDBG1jnUBUXp5w | Alison    |           775 |       61 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |           754 |       78 |
| -AaBjWJYiQxXkCMDlXfPGw | Tim       |           702 |       35 |
| -jt1ACMiZljnBFvS6RRvnA | L         |           696 |       10 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |           694 |      101 |
| -hxUwfo3cMnLTv-CAaP69A | Crissy    |           676 |       25 |
| -H6cTbVxeIRYR-atxdielQ | Lyn       |           675 |       45 |
+------------------------+-----------+---------------+----------+
(Output limit exceeded, 25 of 10000 total rows shown)

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: More reviews with the word 'love'.

	
	SQL code used to arrive at answer:

-- Counting reviews with the word 'hate':

SELECT 
    COUNT(*) AS counter_hate    
FROM Review
WHERE text LIKE '%hate%' 

Output:
+--------------+
| counter_hate |
+--------------+
|          232 |
+--------------+

-- Counting reviews with the word 'love':

SELECT 
    COUNT(*) AS counter_love    
FROM Review
WHERE text LIKE '%love%' 

Output:
+--------------+
| counter_love |
+--------------+
|         1780 |
+--------------+



	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT 
    id
    ,name
    ,SUM(fans) AS fans    
FROM User
GROUP BY id
ORDER BY fans DESC
LIMIT 10

	
	
	Copy and Paste the Result Below:

+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

	
		
Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours? Yes

ii. Do the two groups you chose to analyze have a different number of reviews? Yes
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

It's possible to infer that the restaurants with highers grades are open for less number of hours.

SQL code used for analysis:

SELECT 
    B.City
    ,C.Category
    ,B.Stars
    ,B.review_count
    ,H.hours
FROM ((Business B INNER JOIN Category C ON B.id = C.business_id) INNER JOIN 
    hours H ON B.id = H.business_id) 
WHERE (B.Stars BETWEEN 2 AND 5) AND (B.City = 'Phoenix') 
    AND (C.Category = 'Restaurants' )

Output:

+---------+-------------+-------+--------------+-----------------------+
| city    | category    | stars | review_count | hours                 |
+---------+-------------+-------+--------------+-----------------------+
| Phoenix | Restaurants |   3.5 |           63 | Monday|10:00-22:00    |
| Phoenix | Restaurants |   3.5 |           63 | Tuesday|10:00-22:00   |
| Phoenix | Restaurants |   3.5 |           63 | Friday|10:00-22:00    |
| Phoenix | Restaurants |   3.5 |           63 | Wednesday|10:00-22:00 |
| Phoenix | Restaurants |   3.5 |           63 | Thursday|10:00-22:00  |
| Phoenix | Restaurants |   3.5 |           63 | Sunday|10:00-22:00    |
| Phoenix | Restaurants |   3.5 |           63 | Saturday|10:00-22:00  |
| Phoenix | Restaurants |   2.0 |            8 | Monday|5:00-23:00     |
| Phoenix | Restaurants |   2.0 |            8 | Tuesday|5:00-23:00    |
| Phoenix | Restaurants |   2.0 |            8 | Friday|5:00-0:00      |
| Phoenix | Restaurants |   2.0 |            8 | Wednesday|5:00-23:00  |
| Phoenix | Restaurants |   2.0 |            8 | Thursday|5:00-23:00   |
| Phoenix | Restaurants |   2.0 |            8 | Sunday|5:00-23:00     |
| Phoenix | Restaurants |   2.0 |            8 | Saturday|5:00-0:00    |
| Phoenix | Restaurants |   4.5 |            7 | Monday|11:00-18:00    |
| Phoenix | Restaurants |   4.5 |            7 | Tuesday|11:00-18:00   |
| Phoenix | Restaurants |   4.5 |            7 | Friday|11:00-18:00    |
| Phoenix | Restaurants |   4.5 |            7 | Wednesday|11:00-18:00 |
| Phoenix | Restaurants |   4.5 |            7 | Thursday|11:00-18:00  |
| Phoenix | Restaurants |   4.5 |            7 | Sunday|13:00-16:00    |
| Phoenix | Restaurants |   4.5 |            7 | Saturday|11:00-18:00  |
| Phoenix | Restaurants |   3.0 |           60 | Monday|11:00-0:00     |
| Phoenix | Restaurants |   3.0 |           60 | Tuesday|11:00-0:00    |
| Phoenix | Restaurants |   3.0 |           60 | Friday|11:00-2:00     |
| Phoenix | Restaurants |   3.0 |           60 | Wednesday|11:00-0:00  |
+---------+-------------+-------+--------------+-----------------------+
(Output limit exceeded, 25 of 35 total rows shown)


		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Restaurants in Phoenix that still open have a lower grade average. However, only one restaurant in Phoenix was closed.
         
         
ii. Difference 2: Restaurants in Phoenix that still open have a higher number of reviews.
         
         
         
SQL code used for analysis:

SELECT 
    B.is_open
    ,AVG(B.Stars) AS Average_Stars
    ,AVG(B.review_count) AS Average_reviews   
FROM ((Business B LEFT JOIN Category C ON B.id = C.business_id) LEFT JOIN 
    hours H ON B.id = H.business_id) 
WHERE (B.Stars BETWEEN 2 AND 5) AND (B.City = 'Phoenix') 
    AND (C.Category = 'Restaurants' ) 
GROUP BY B.is_open

Output:

+---------+---------------+-----------------+
| is_open | Average_Stars | Average_reviews |
+---------+---------------+-----------------+
|       0 |           4.5 |             7.0 |
|       1 | 3.15517241379 |   142.137931034 |
+---------+---------------+-----------------+	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Verify the catogories with the highest average of stars and reviews.
                  
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:


For this analysis, I used the Business and Category tables from the dataset. In the first table,  
I extracted the ratings and the number of reviews to obtain the average values by category.  In the Category table,
I grouped the categories to calculate the average values, obtaining that the 'Arabian' and 'Halal' categories 
were the most reviewed and the best evaluated in the list.
                           
                  
iii. Output of your finished dataset:

+---------------------------------+---------------+-----------------+
| category                        | Average_Stars | Average_reviews |
+---------------------------------+---------------+-----------------+
| Arabian                         |           5.0 |           267.0 |
| Halal                           |           5.0 |           267.0 |
| Transmission Repair             |           5.0 |            63.0 |
| Auto Detailing                  |           5.0 |            30.5 |
| Car Wash                        |           5.0 |            30.5 |
| Massage                         |           5.0 |            18.0 |
| Massage Therapy                 |           5.0 |            18.0 |
| Orthopedists                    |           5.0 |            18.0 |
| Orthotics                       |           5.0 |            18.0 |
| Trainers                        |           5.0 |            17.0 |
| Chiropractors                   |           5.0 |            14.0 |
| Electronics Repair              |           5.0 |            11.0 |
| Bike Repair/Maintenance         |           5.0 |             8.0 |
| Bikes                           |           5.0 |             8.0 |
| Shoe Stores                     |           5.0 |             8.0 |
| Door Sales/Installation         |           5.0 |             7.0 |
| Garage Door Services            |           5.0 |             7.0 |
| Heating & Air Conditioning/HVAC |           5.0 |             7.0 |
| Solar Installation              |           5.0 |             7.0 |
| Blow Dry/Out Services           |           5.0 |             5.0 |
| Child Care & Day Care           |           5.0 |             5.0 |
| Colonics                        |           5.0 |             5.0 |
| Elementary Schools              |           5.0 |             5.0 |
| Hair Extensions                 |           5.0 |             5.0 |
| Hair Stylists                   |           5.0 |             5.0 |
+---------------------------------+---------------+-----------------+
(Output limit exceeded, 25 of 258 total rows shown)
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT 
    C.Category
    ,AVG(B.Stars) AS Average_Stars
    ,AVG(B.review_count) AS Average_reviews   
FROM Business B LEFT JOIN Category C ON B.id = C.business_id
GROUP BY C.Category
ORDER BY Average_Stars DESC, Average_reviews DESC